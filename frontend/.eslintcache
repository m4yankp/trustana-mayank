[{"/Applications/MAMP/htdocs/trustana/frontend/src/index.tsx":"1","/Applications/MAMP/htdocs/trustana/frontend/src/reportWebVitals.ts":"2","/Applications/MAMP/htdocs/trustana/frontend/src/App.tsx":"3","/Applications/MAMP/htdocs/trustana/frontend/src/Routes.tsx":"4","/Applications/MAMP/htdocs/trustana/frontend/src/Store.tsx":"5","/Applications/MAMP/htdocs/trustana/frontend/src/layout/Footer.tsx":"6","/Applications/MAMP/htdocs/trustana/frontend/src/layout/Header.tsx":"7","/Applications/MAMP/htdocs/trustana/frontend/src/pages/Login/index.tsx":"8","/Applications/MAMP/htdocs/trustana/frontend/src/pages/Public/index.tsx":"9","/Applications/MAMP/htdocs/trustana/frontend/src/pages/Register/index.tsx":"10","/Applications/MAMP/htdocs/trustana/frontend/src/layout/Loader.tsx":"11","/Applications/MAMP/htdocs/trustana/frontend/src/config.tsx":"12","/Applications/MAMP/htdocs/trustana/frontend/src/pages/Dashboard/index.tsx":"13","/Applications/MAMP/htdocs/trustana/frontend/src/components/userData/index.tsx":"14","/Applications/MAMP/htdocs/trustana/frontend/src/services/index.ts":"15"},{"size":547,"mtime":1609079879066,"results":"16","hashOfConfig":"17"},{"size":416,"mtime":1609079879069,"results":"18","hashOfConfig":"17"},{"size":407,"mtime":1609079879064,"results":"19","hashOfConfig":"17"},{"size":974,"mtime":1609079879065,"results":"20","hashOfConfig":"17"},{"size":864,"mtime":1609079879065,"results":"21","hashOfConfig":"17"},{"size":262,"mtime":1609079879067,"results":"22","hashOfConfig":"17"},{"size":631,"mtime":1609079879067,"results":"23","hashOfConfig":"17"},{"size":2340,"mtime":1609090307760,"results":"24","hashOfConfig":"17"},{"size":491,"mtime":1609079879068,"results":"25","hashOfConfig":"17"},{"size":7502,"mtime":1609079879068,"results":"26","hashOfConfig":"17"},{"size":246,"mtime":1609079879067,"results":"27","hashOfConfig":"17"},{"size":55,"mtime":1609064540818,"results":"28","hashOfConfig":"29"},{"size":3534,"mtime":1609079879068,"results":"30","hashOfConfig":"17"},{"size":910,"mtime":1609079879066,"results":"31","hashOfConfig":"17"},{"size":412,"mtime":1609090235694,"results":"32","hashOfConfig":"17"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"1vx0wbl",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"35"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"35"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"35"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},"40mmj5",{"filePath":"62","messages":"63","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"35"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"/Applications/MAMP/htdocs/trustana/frontend/src/index.tsx",[],["70","71"],"/Applications/MAMP/htdocs/trustana/frontend/src/reportWebVitals.ts",[],"/Applications/MAMP/htdocs/trustana/frontend/src/App.tsx",[],"/Applications/MAMP/htdocs/trustana/frontend/src/Routes.tsx",[],"/Applications/MAMP/htdocs/trustana/frontend/src/Store.tsx",[],"/Applications/MAMP/htdocs/trustana/frontend/src/layout/Footer.tsx",[],"/Applications/MAMP/htdocs/trustana/frontend/src/layout/Header.tsx",[],"/Applications/MAMP/htdocs/trustana/frontend/src/pages/Login/index.tsx",["72","73","74","75"],"import React, { useContext, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap'\nimport { LoginService } from '../../services/';\nimport Loader from '../../layout/Loader'\nimport { Store } from '../../Store'\n\nexport default function Login(): JSX.Element {\n  // const { state, dispatch } = useContext(Store)\n  const [isLoading, setLoading] = useState(false)\n  const [validated, setValidated] = useState(false);\n  \n  const handleSubmit = async(event: any) => {\n    const form = event.currentTarget;\n    setValidated(true);\n    event.preventDefault();\n    event.stopPropagation();\n    if (form.checkValidity() === false) {\n      setLoading(false);\n    }\n   else{\n      setLoading(true);\n      const response = await LoginService(\"m4yank\",\"password\");\n   }\n  };\n   return (\n    <Container className=\"mt-3 mb-3\">\n      <Row>\n        <Col md=\"12\">\n          <h2 className=\"text-center\">Login</h2>\n        </Col>\n      </Row>\n      <Row>\n        <Col md=\"12\">\n       <Form noValidate validated={validated} onSubmit={handleSubmit}>\n      <Form.Row>\n          <Form.Group as={Col} md=\"12\" controlId=\"validationCustomUsername\">\n          <Form.Label>Username</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Username\"\n              required\n            />\n            <Form.Control.Feedback type=\"invalid\">\n             Please enter a valid username.\n            </Form.Control.Feedback>\n        </Form.Group>\n        </Form.Row>\n        <Form.Row>\n        <Form.Group as={Col} md=\"12\" controlId=\"validationCustomPassword1\">\n          <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Password\"\n              required\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              Please enter a password.\n            </Form.Control.Feedback>\n          </Form.Group>\n        </Form.Row>\n          {!isLoading ? <Button variant=\"primary\" type=\"submit\">\n            Login\n          </Button> : <Loader />}\n              </Form>\n        </Col>\n      </Row>\n      <Row>\n        <Col md=\"12\">\n          <p style={{marginTop:20}}>Or <Link to=\"/register\">Click here to Register</Link></p>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n","/Applications/MAMP/htdocs/trustana/frontend/src/pages/Public/index.tsx",["76","77","78","79"],"import React from 'react'\nimport { Container, Row, Col, Table } from 'react-bootstrap'\nimport UserData from '../../components/userData'\nimport Loader from '../../layout/Loader'\nimport { API_URL } from '../../config'\n\nexport default function Public(video: any): JSX.Element {\n  const vid = video.history.location.state\n  return (\n    <Container className=\"mt-3 mb-3\">\n      <Row>\n        <Col md=\"12\">\n          <UserData userData={'as'} />\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n","/Applications/MAMP/htdocs/trustana/frontend/src/pages/Register/index.tsx",["80","81","82","83","84","85","86","87","88","89","90","91"],"import React, { useState } from 'react'\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap'\n\n// import { API_URL } from '../../config'\n// import Loader from '../../layout/Loader'\n\nexport default function Register(): JSX.Element {\n\nconst [validated, setValidated] = useState(false);\n  \n  const handleSubmit = (event: any) => {\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    setValidated(true);\n  };\n\n  const maxDate = ()=>{\n   return new Date().toISOString().split(\"T\")[0];\n  }\n  const [title, setTitle] = useState('')\n  const [description, setDescription] = useState('')\n  const [videoFile, setVideoFile] = useState('')\n  const [loading, setLoading] = useState(false)\n  const [message, setMessage] = useState('')\n  const [error, setError] = useState('success')\n  const fileHandler = (e: any): void => {\n    if (e.target.files[0]) {\n      setVideoFile((curr) => (curr = e.target.files[0]))\n    }\n  }\n  // const submitForm = async (e: any) => {\n  //   e.preventDefault()\n  //   if (title && description && videoFile) {\n  //     setLoading((curr) => (curr = true))\n  //     setError((curr) => (curr = 'success'))\n  //     setMessage((curr) => (curr = ''))\n  //     const formData = new FormData()\n  //     formData.append('title', title)\n  //     formData.append('description', description)\n  //     formData.append('video', videoFile)\n  //     try {\n  //       await fetch(`${API_URL}/uploadVideo`, {\n  //         method: 'POST',\n  //         body: formData,\n  //       })\n  //         .then((response) => response.json())\n  //         .then((data) => {\n  //           setMessage((curr) => (curr = data.message))\n  //           if (data.error) {\n  //             setError((curr) => (curr = 'danger'))\n  //           } else {\n  //             setError((curr) => (curr = 'success'))\n  //           }\n  //           setLoading((curr) => (curr = false))\n  //           resetForm()\n  //         })\n  //     } catch (err: any) {\n  //       setLoading((curr) => (curr = false))\n  //       setMessage((curr) => (curr = 'An error occurred'))\n  //       resetForm()\n  //     }\n  //   } else {\n  //     setMessage((curr) => (curr = 'Please complete the form, all fields are mandatory!'))\n  //     setError((curr) => (curr = 'danger'))\n  //   }\n  // }\n  // const resetForm = (): void => {\n  //   setTitle('')\n  //   setDescription('')\n  //   setVideoFile('')\n  // }\n  return (\n    <Container className=\"mt-3 mb-3\">\n      <Row>\n        <Col md=\"12\">\n          <h2 className=\"text-center\">Register</h2>\n        </Col>\n      </Row>\n      <Row>\n        <Col md=\"12\">\n          {/* {message && <Alert data-testid=\"alert\" variant={error}>{message}</Alert>} */}\n        <Form noValidate validated={validated} onSubmit={handleSubmit}>\n      <Form.Row>\n        <Form.Group as={Col} md=\"4\" controlId=\"validationCustom01\">\n          <Form.Label>First name</Form.Label>\n          <Form.Control\n            required\n            type=\"text\"\n            placeholder=\"First name\"\n          />\n          <Form.Control.Feedback type=\"invalid\">\n              Please enter a valid first name\n            </Form.Control.Feedback>\n          <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n        </Form.Group>\n        <Form.Group as={Col} md=\"4\" controlId=\"validationCustom02\">\n          <Form.Label>Last name</Form.Label>\n          <Form.Control\n            required\n            type=\"text\"\n            placeholder=\"Last name\"\n          />\n          <Form.Control.Feedback type=\"invalid\">\n              Please enter a valid last name\n            </Form.Control.Feedback>\n          <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n        </Form.Group>\n        <Form.Group as={Col} md=\"4\" controlId=\"validationCustom02\">\n          <Form.Label>Date Of Birth</Form.Label>\n          <Form.Control\n            required\n            type=\"date\"\n            placeholder=\"dd/mm/yyyy\"\n            max={maxDate()}\n          />\n          <Form.Control.Feedback type=\"invalid\">\n              Please enter a valid date of birth\n            </Form.Control.Feedback>\n          <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n        </Form.Group>\n      </Form.Row>\n      <Form.Row>\n        <Form.Group as={Col} md=\"4\" controlId=\"validationCustomUsername\">\n          <Form.Label>Username</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Username\"\n              required\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              Please choose a username.\n            </Form.Control.Feedback>\n        </Form.Group>\n        <Form.Group as={Col} md=\"4\" controlId=\"validationCustomPassword1\">\n          <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Password\"\n              required\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              Please enter a password.\n            </Form.Control.Feedback>\n        </Form.Group>\n        <Form.Group as={Col} md=\"4\" controlId=\"validationCustomPassword2\">\n          <Form.Label>Re-enter Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Re-enter Password\"\n              required\n            />\n            <Form.Control.Feedback type=\"invalid\">\n               Please re-enter your password.\n            </Form.Control.Feedback>\n        </Form.Group>\n      </Form.Row>\n      <Form.Row>\n        <Form.Group as={Col} md=\"12\" controlId=\"validationCustomPassword2\">\n          <Form.Label>Secret Token</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Enter a secret token that will be only with you to access your data\"\n              required\n            />\n            <Form.Control.Feedback type=\"invalid\">\n               Please re-enter your password.\n            </Form.Control.Feedback>\n        </Form.Group>\n      </Form.Row>\n      <Form.Row>\n        <Form.Group as={Col} md=\"12\" controlId=\"validationAddress\">\n          <Form.Label>Address</Form.Label>\n          <Form.Control type=\"text\" placeholder=\"Address\" required />\n          <Form.Control.Feedback type=\"invalid\">\n            Please provide a valid address.\n          </Form.Control.Feedback>\n        </Form.Group>\n      </Form.Row>\n      <Form.Row>\n        <Form.Group as={Col} md=\"6\" controlId=\"validationCustom03\">\n          <Form.Label>City</Form.Label>\n          <Form.Control type=\"text\" placeholder=\"City\" required />\n          <Form.Control.Feedback type=\"invalid\">\n            Please provide a valid city.\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Form.Group as={Col} md=\"3\" controlId=\"validationCustom04\">\n          <Form.Label>State</Form.Label>\n          <Form.Control type=\"text\" placeholder=\"State\" required />\n          <Form.Control.Feedback type=\"invalid\">\n            Please provide a valid state.\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Form.Group as={Col} md=\"3\" controlId=\"validationCustom05\">\n          <Form.Label>Zip</Form.Label>\n          <Form.Control type=\"text\" placeholder=\"Zip\" required />\n          <Form.Control.Feedback type=\"invalid\">\n            Please provide a valid zip.\n          </Form.Control.Feedback>\n        </Form.Group>\n      </Form.Row>\n      <Button type=\"submit\">Register</Button>\n    </Form>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n","/Applications/MAMP/htdocs/trustana/frontend/src/layout/Loader.tsx",[],"/Applications/MAMP/htdocs/trustana/frontend/src/config.tsx",[],["92","93"],"/Applications/MAMP/htdocs/trustana/frontend/src/pages/Dashboard/index.tsx",["94","95","96","97","98","99"],"import React, { useContext, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap'\nimport UserData from '../../components/userData';\nimport Loader from '../../layout/Loader'\nimport { Store } from '../../Store'\nimport { API_URL } from '../../config'\n\nexport default function Dashboard(): JSX.Element {\n  // const { state, dispatch } = useContext(Store)\n  // const [isLoading, setLoading] = useState(false)\n  const [validated, setValidated] = useState(false);\n  const [validatedPublicForm, setValidatedPublicForm] = useState(false);\n  \n  const handleSubmit = (event: any) => {\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    setValidated(true);\n  };\n\n  const handleSubmitPublicForm = (event: any) => {\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    setValidatedPublicForm(true);\n  };\n\n   return (\n    <Container className=\"mt-3 mb-3\">\n      <Row>\n        <Col md=\"12\">\n          <h2 className=\"text-center\">Hello! USERNAME</h2>\n        </Col>\n      </Row>\n      <Row>\n        <Col md=\"12\">\n       <Form noValidate validated={validated} onSubmit={handleSubmit}>\n      <Form.Row>\n          <Form.Group as={Col} md=\"12\" controlId=\"validationCustomUsername\">\n          <Form.Label>Secret Code</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Secret Token To Access Your Data\"\n              required\n            />\n            <Form.Control.Feedback type=\"invalid\">\n             Please enter a valid secret token.\n            </Form.Control.Feedback>\n        </Form.Group>\n        </Form.Row>\n          <Button variant=\"primary\" type=\"submit\">\n            Access My Data\n          </Button>\n              </Form>\n        </Col>\n      </Row>\n      <Row>\n        <Col md=\"12\">\n          <p style={{marginTop:20, textAlign:'center',marginBottom:20}}>Or Enter details below to generate a public link</p>\n        </Col>\n      </Row>\n       <Row>\n        <Col md=\"12\">\n       <Form noValidate validated={validatedPublicForm} onSubmit={handleSubmitPublicForm}>\n      <Form.Row>\n          <Form.Group as={Col} md=\"12\" controlId=\"validationCustomUsername\">\n          <Form.Label>Secret Code</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Secret Token To Access Your Data\"\n              required\n            />\n            <Form.Control.Feedback type=\"invalid\">\n             Please enter a valid secret token.\n            </Form.Control.Feedback>\n        </Form.Group>\n         <Form.Group as={Col} md=\"12\" controlId=\"validationCustomUsername\">\n          <Form.Label>Link expiry Time</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Time You Want your data to be available for with link that will be generated\"\n              required\n            />\n            <Form.Control.Feedback type=\"invalid\">\n             Please enter a valid secret token.\n            </Form.Control.Feedback>\n        </Form.Group>\n        </Form.Row>\n          <Button variant=\"primary\" type=\"submit\">\n            Generate Public Link\n          </Button>\n              </Form>\n        </Col>\n      </Row>\n\n      <Row className=\"mt-4\">\n        <Col md=\"12\">\n          <UserData userData={'as'} />\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n","/Applications/MAMP/htdocs/trustana/frontend/src/components/userData/index.tsx",[],["100","101"],"/Applications/MAMP/htdocs/trustana/frontend/src/services/index.ts",[],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":1,"column":17,"nodeType":"108","messageId":"109","endLine":1,"endColumn":27},{"ruleId":"106","severity":1,"message":"110","line":1,"column":29,"nodeType":"108","messageId":"109","endLine":1,"endColumn":38},{"ruleId":"106","severity":1,"message":"111","line":6,"column":10,"nodeType":"108","messageId":"109","endLine":6,"endColumn":15},{"ruleId":"106","severity":1,"message":"112","line":23,"column":13,"nodeType":"108","messageId":"109","endLine":23,"endColumn":21},{"ruleId":"106","severity":1,"message":"113","line":2,"column":31,"nodeType":"108","messageId":"109","endLine":2,"endColumn":36},{"ruleId":"106","severity":1,"message":"114","line":4,"column":8,"nodeType":"108","messageId":"109","endLine":4,"endColumn":14},{"ruleId":"106","severity":1,"message":"115","line":5,"column":10,"nodeType":"108","messageId":"109","endLine":5,"endColumn":17},{"ruleId":"106","severity":1,"message":"116","line":8,"column":9,"nodeType":"108","messageId":"109","endLine":8,"endColumn":12},{"ruleId":"106","severity":1,"message":"117","line":24,"column":10,"nodeType":"108","messageId":"109","endLine":24,"endColumn":15},{"ruleId":"106","severity":1,"message":"118","line":24,"column":17,"nodeType":"108","messageId":"109","endLine":24,"endColumn":25},{"ruleId":"106","severity":1,"message":"119","line":25,"column":10,"nodeType":"108","messageId":"109","endLine":25,"endColumn":21},{"ruleId":"106","severity":1,"message":"120","line":25,"column":23,"nodeType":"108","messageId":"109","endLine":25,"endColumn":37},{"ruleId":"106","severity":1,"message":"121","line":26,"column":10,"nodeType":"108","messageId":"109","endLine":26,"endColumn":19},{"ruleId":"106","severity":1,"message":"122","line":27,"column":10,"nodeType":"108","messageId":"109","endLine":27,"endColumn":17},{"ruleId":"106","severity":1,"message":"123","line":27,"column":19,"nodeType":"108","messageId":"109","endLine":27,"endColumn":29},{"ruleId":"106","severity":1,"message":"124","line":28,"column":10,"nodeType":"108","messageId":"109","endLine":28,"endColumn":17},{"ruleId":"106","severity":1,"message":"125","line":28,"column":19,"nodeType":"108","messageId":"109","endLine":28,"endColumn":29},{"ruleId":"106","severity":1,"message":"126","line":29,"column":10,"nodeType":"108","messageId":"109","endLine":29,"endColumn":15},{"ruleId":"106","severity":1,"message":"127","line":29,"column":17,"nodeType":"108","messageId":"109","endLine":29,"endColumn":25},{"ruleId":"106","severity":1,"message":"128","line":30,"column":9,"nodeType":"108","messageId":"109","endLine":30,"endColumn":20},{"ruleId":"102","replacedBy":"129"},{"ruleId":"104","replacedBy":"130"},{"ruleId":"106","severity":1,"message":"107","line":1,"column":17,"nodeType":"108","messageId":"109","endLine":1,"endColumn":27},{"ruleId":"106","severity":1,"message":"110","line":1,"column":29,"nodeType":"108","messageId":"109","endLine":1,"endColumn":38},{"ruleId":"106","severity":1,"message":"131","line":2,"column":10,"nodeType":"108","messageId":"109","endLine":2,"endColumn":14},{"ruleId":"106","severity":1,"message":"114","line":5,"column":8,"nodeType":"108","messageId":"109","endLine":5,"endColumn":14},{"ruleId":"106","severity":1,"message":"111","line":6,"column":10,"nodeType":"108","messageId":"109","endLine":6,"endColumn":15},{"ruleId":"106","severity":1,"message":"115","line":7,"column":10,"nodeType":"108","messageId":"109","endLine":7,"endColumn":17},{"ruleId":"102","replacedBy":"132"},{"ruleId":"104","replacedBy":"133"},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"@typescript-eslint/no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Store' is defined but never used.","'response' is assigned a value but never used.","'Table' is defined but never used.","'Loader' is defined but never used.","'API_URL' is defined but never used.","'vid' is assigned a value but never used.","'title' is assigned a value but never used.","'setTitle' is assigned a value but never used.","'description' is assigned a value but never used.","'setDescription' is assigned a value but never used.","'videoFile' is assigned a value but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'message' is assigned a value but never used.","'setMessage' is assigned a value but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","'fileHandler' is assigned a value but never used.",["134"],["135"],"'Link' is defined but never used.",["134"],["135"],"no-global-assign","no-unsafe-negation"]
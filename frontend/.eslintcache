[{"/Applications/MAMP/htdocs/trustana/frontend/src/index.tsx":"1","/Applications/MAMP/htdocs/trustana/frontend/src/reportWebVitals.ts":"2","/Applications/MAMP/htdocs/trustana/frontend/src/App.tsx":"3","/Applications/MAMP/htdocs/trustana/frontend/src/Routes.tsx":"4","/Applications/MAMP/htdocs/trustana/frontend/src/Store.tsx":"5","/Applications/MAMP/htdocs/trustana/frontend/src/layout/Footer.tsx":"6","/Applications/MAMP/htdocs/trustana/frontend/src/layout/Header.tsx":"7","/Applications/MAMP/htdocs/trustana/frontend/src/pages/Login/index.tsx":"8","/Applications/MAMP/htdocs/trustana/frontend/src/pages/Public/index.tsx":"9","/Applications/MAMP/htdocs/trustana/frontend/src/pages/Register/index.tsx":"10","/Applications/MAMP/htdocs/trustana/frontend/src/layout/Loader.tsx":"11","/Applications/MAMP/htdocs/trustana/frontend/src/config.tsx":"12","/Applications/MAMP/htdocs/trustana/frontend/src/pages/Dashboard/index.tsx":"13","/Applications/MAMP/htdocs/trustana/frontend/src/components/userData/index.tsx":"14","/Applications/MAMP/htdocs/trustana/frontend/src/services/index.ts":"15","/Applications/MAMP/htdocs/trustana/frontend/src/pages/Logout/index.tsx":"16","/Applications/MAMP/htdocs/trustana/frontend/src/components/GeneratePublicToken/index.tsx":"17","/Applications/MAMP/htdocs/trustana/frontend/src/components/GetUserData/index.tsx":"18"},{"size":547,"mtime":1609079879066,"results":"19","hashOfConfig":"20"},{"size":416,"mtime":1609079879069,"results":"21","hashOfConfig":"20"},{"size":407,"mtime":1609095187887,"results":"22","hashOfConfig":"20"},{"size":1193,"mtime":1609095421415,"results":"23","hashOfConfig":"20"},{"size":1354,"mtime":1609097131091,"results":"24","hashOfConfig":"20"},{"size":262,"mtime":1609079879067,"results":"25","hashOfConfig":"20"},{"size":856,"mtime":1609095152808,"results":"26","hashOfConfig":"20"},{"size":3360,"mtime":1609093864723,"results":"27","hashOfConfig":"20"},{"size":386,"mtime":1609099324061,"results":"28","hashOfConfig":"20"},{"size":7502,"mtime":1609079879068,"results":"29","hashOfConfig":"20"},{"size":246,"mtime":1609079879067,"results":"30","hashOfConfig":"20"},{"size":55,"mtime":1609064540818,"results":"31","hashOfConfig":"32"},{"size":817,"mtime":1609099137978,"results":"33","hashOfConfig":"20"},{"size":1094,"mtime":1609097431738,"results":"34","hashOfConfig":"20"},{"size":3303,"mtime":1609097935295,"results":"35","hashOfConfig":"20"},{"size":561,"mtime":1609095375983,"results":"36","hashOfConfig":"20"},{"size":3268,"mtime":1609099232573,"results":"37","hashOfConfig":"20"},{"size":2460,"mtime":1609099040697,"results":"38","hashOfConfig":"20"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"1vx0wbl",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"41"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"41"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"41"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"41"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"40mmj5",{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"41"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"41"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Applications/MAMP/htdocs/trustana/frontend/src/index.tsx",[],["83","84"],"/Applications/MAMP/htdocs/trustana/frontend/src/reportWebVitals.ts",[],"/Applications/MAMP/htdocs/trustana/frontend/src/App.tsx",[],"/Applications/MAMP/htdocs/trustana/frontend/src/Routes.tsx",["85"],"import React, { useContext } from 'react'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport Login from './pages/Login';\nimport Dashboard from './pages/Dashboard';\nimport Register from './pages/Register';\nimport Public from './pages/Public';\nimport Logout from './pages/Logout';\nimport { Store } from './Store';\n\nexport default function Routes() {\n  const { state, dispatch } = useContext(Store);\n    return (\n       <BrowserRouter>\n        <Switch>\n          <Route exact path='/' component={Login} />\n          <Route exact path='/register' component={Register} />\n          {state.loginToken &&  <Route exact path='/dashboard' component={Dashboard} /> }\n          <Route exact path='/logout' component={Logout} />\n          <Route exact path='/public/:token' component={Public} />\n          <Route exact path='*' >\n             <Container className=\"mt-3 mb-3\">\n                <Row>\n                    <Col md={12}>\n                        <h1>404 Page Not Found</h1>\n                    </Col>\n                </Row>\n             </Container>\n          </Route>\n        </Switch>\n      </BrowserRouter>\n    )\n}\n","/Applications/MAMP/htdocs/trustana/frontend/src/Store.tsx",[],"/Applications/MAMP/htdocs/trustana/frontend/src/layout/Footer.tsx",[],"/Applications/MAMP/htdocs/trustana/frontend/src/layout/Header.tsx",["86"],"import React, { useContext } from 'react'\nimport { Navbar, Image, Nav } from 'react-bootstrap'\nimport { Store } from '../Store';\n\nexport default function Header(): JSX.Element {\n  const { state, dispatch } = useContext(Store);\n  return (\n    <Navbar bg=\"light\" expand=\"lg\">\n      <Navbar.Brand href=\"/\">\n        <Image src={'/trustana-logo.png'} height={24} className=\"p5\" />\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\" className=\"justify-content-end\">\n       {!state.loginToken ? <Nav className=\"ml-auto\">\n          <Nav.Link href=\"/register\">Register</Nav.Link>\n          <Nav.Link href=\"/\">Login</Nav.Link> \n        </Nav> : \n        <Nav className=\"ml-auto\">\n        <Nav.Link href=\"/logout\">Logout</Nav.Link> \n        </Nav>}\n      </Navbar.Collapse>\n    </Navbar>\n  )\n}\n","/Applications/MAMP/htdocs/trustana/frontend/src/pages/Login/index.tsx",["87","88"],"import React, { useContext, useEffect, useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Container, Row, Col, Form, Button, Alert } from 'react-bootstrap'\nimport { LoginService } from '../../services/';\nimport Loader from '../../layout/Loader'\nimport { Store } from '../../Store'\n\nexport default function Login(): JSX.Element {\n  const { state, dispatch } = useContext(Store);\n  const [isLoading, setLoading] = useState(false);\n  const [validated, setValidated] = useState(false);\n  const [isError, setError] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const history = useHistory();\n  \n  const handleSubmit = async(event: any) => {\n    const form = event.currentTarget;\n    setValidated(true);\n    event.preventDefault();\n    event.stopPropagation();\n    if (form.checkValidity() === false) {\n      setLoading(false);\n    }\n   else{\n      setLoading(true);\n      if(username.length > 0 && password.length > 0)\n      {\n        const response = await LoginService(username,password);\n        setLoading(false); \n        setUsername('');\n        setPassword('');\n        setValidated(false);\n        if(response.error === true)\n        {\n          setError(true);\n        }\n        else\n        {\n          \n          dispatch({\n            type:'SET_TOKEN',\n            payload: {\n              token: response.token,\n              username: username\n            }\n          });\n          history.push('/dashboard');\n          setError(false);\n\n        }\n      }\n   }\n  };\n   return (\n    <Container className=\"mt-3 mb-3\">\n      <Row>\n        <Col md=\"12\">\n          <h2 className=\"text-center\">Login</h2>\n        </Col>\n      </Row>\n      <Row>\n        <Col md=\"12\">\n          {isError && <Alert data-testid=\"alert\" variant=\"danger\">Invalid username and password</Alert>}\n       <Form noValidate validated={validated} onSubmit={handleSubmit}>\n      <Form.Row>\n          <Form.Group as={Col} md=\"12\" controlId=\"validationCustomUsername\">\n          <Form.Label>Username</Form.Label>\n            <Form.Control\n              type=\"text\"\n              value={username}\n              placeholder=\"Username\"\n              onChange={(e) => setUsername(e.target.value)}\n              required\n            />\n            <Form.Control.Feedback type=\"invalid\">\n             Please enter a valid username.\n            </Form.Control.Feedback>\n        </Form.Group>\n        </Form.Row>\n        <Form.Row>\n        <Form.Group as={Col} md=\"12\" controlId=\"validationCustomPassword1\">\n          <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              value={password}\n              placeholder=\"Password\"\n              onChange={(e) => setPassword(e.target.value)}\n              required\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              Please enter a password.\n            </Form.Control.Feedback>\n          </Form.Group>\n        </Form.Row>\n          {!isLoading ? <Button variant=\"primary\" type=\"submit\">\n            Login\n          </Button> : <Loader />}\n              </Form>\n        </Col>\n      </Row>\n      <Row>\n        <Col md=\"12\">\n          <p style={{marginTop:20}}>Or <Link to=\"/register\">Click here to Register</Link></p>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n","/Applications/MAMP/htdocs/trustana/frontend/src/pages/Public/index.tsx",["89"],"/Applications/MAMP/htdocs/trustana/frontend/src/pages/Register/index.tsx",["90","91","92","93","94","95","96","97","98","99","100","101"],"import React, { useState } from 'react'\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap'\n\n// import { API_URL } from '../../config'\n// import Loader from '../../layout/Loader'\n\nexport default function Register(): JSX.Element {\n\nconst [validated, setValidated] = useState(false);\n  \n  const handleSubmit = (event: any) => {\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    setValidated(true);\n  };\n\n  const maxDate = ()=>{\n   return new Date().toISOString().split(\"T\")[0];\n  }\n  const [title, setTitle] = useState('')\n  const [description, setDescription] = useState('')\n  const [videoFile, setVideoFile] = useState('')\n  const [loading, setLoading] = useState(false)\n  const [message, setMessage] = useState('')\n  const [error, setError] = useState('success')\n  const fileHandler = (e: any): void => {\n    if (e.target.files[0]) {\n      setVideoFile((curr) => (curr = e.target.files[0]))\n    }\n  }\n  // const submitForm = async (e: any) => {\n  //   e.preventDefault()\n  //   if (title && description && videoFile) {\n  //     setLoading((curr) => (curr = true))\n  //     setError((curr) => (curr = 'success'))\n  //     setMessage((curr) => (curr = ''))\n  //     const formData = new FormData()\n  //     formData.append('title', title)\n  //     formData.append('description', description)\n  //     formData.append('video', videoFile)\n  //     try {\n  //       await fetch(`${API_URL}/uploadVideo`, {\n  //         method: 'POST',\n  //         body: formData,\n  //       })\n  //         .then((response) => response.json())\n  //         .then((data) => {\n  //           setMessage((curr) => (curr = data.message))\n  //           if (data.error) {\n  //             setError((curr) => (curr = 'danger'))\n  //           } else {\n  //             setError((curr) => (curr = 'success'))\n  //           }\n  //           setLoading((curr) => (curr = false))\n  //           resetForm()\n  //         })\n  //     } catch (err: any) {\n  //       setLoading((curr) => (curr = false))\n  //       setMessage((curr) => (curr = 'An error occurred'))\n  //       resetForm()\n  //     }\n  //   } else {\n  //     setMessage((curr) => (curr = 'Please complete the form, all fields are mandatory!'))\n  //     setError((curr) => (curr = 'danger'))\n  //   }\n  // }\n  // const resetForm = (): void => {\n  //   setTitle('')\n  //   setDescription('')\n  //   setVideoFile('')\n  // }\n  return (\n    <Container className=\"mt-3 mb-3\">\n      <Row>\n        <Col md=\"12\">\n          <h2 className=\"text-center\">Register</h2>\n        </Col>\n      </Row>\n      <Row>\n        <Col md=\"12\">\n          {/* {message && <Alert data-testid=\"alert\" variant={error}>{message}</Alert>} */}\n        <Form noValidate validated={validated} onSubmit={handleSubmit}>\n      <Form.Row>\n        <Form.Group as={Col} md=\"4\" controlId=\"validationCustom01\">\n          <Form.Label>First name</Form.Label>\n          <Form.Control\n            required\n            type=\"text\"\n            placeholder=\"First name\"\n          />\n          <Form.Control.Feedback type=\"invalid\">\n              Please enter a valid first name\n            </Form.Control.Feedback>\n          <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n        </Form.Group>\n        <Form.Group as={Col} md=\"4\" controlId=\"validationCustom02\">\n          <Form.Label>Last name</Form.Label>\n          <Form.Control\n            required\n            type=\"text\"\n            placeholder=\"Last name\"\n          />\n          <Form.Control.Feedback type=\"invalid\">\n              Please enter a valid last name\n            </Form.Control.Feedback>\n          <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n        </Form.Group>\n        <Form.Group as={Col} md=\"4\" controlId=\"validationCustom02\">\n          <Form.Label>Date Of Birth</Form.Label>\n          <Form.Control\n            required\n            type=\"date\"\n            placeholder=\"dd/mm/yyyy\"\n            max={maxDate()}\n          />\n          <Form.Control.Feedback type=\"invalid\">\n              Please enter a valid date of birth\n            </Form.Control.Feedback>\n          <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n        </Form.Group>\n      </Form.Row>\n      <Form.Row>\n        <Form.Group as={Col} md=\"4\" controlId=\"validationCustomUsername\">\n          <Form.Label>Username</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Username\"\n              required\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              Please choose a username.\n            </Form.Control.Feedback>\n        </Form.Group>\n        <Form.Group as={Col} md=\"4\" controlId=\"validationCustomPassword1\">\n          <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Password\"\n              required\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              Please enter a password.\n            </Form.Control.Feedback>\n        </Form.Group>\n        <Form.Group as={Col} md=\"4\" controlId=\"validationCustomPassword2\">\n          <Form.Label>Re-enter Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Re-enter Password\"\n              required\n            />\n            <Form.Control.Feedback type=\"invalid\">\n               Please re-enter your password.\n            </Form.Control.Feedback>\n        </Form.Group>\n      </Form.Row>\n      <Form.Row>\n        <Form.Group as={Col} md=\"12\" controlId=\"validationCustomPassword2\">\n          <Form.Label>Secret Token</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Enter a secret token that will be only with you to access your data\"\n              required\n            />\n            <Form.Control.Feedback type=\"invalid\">\n               Please re-enter your password.\n            </Form.Control.Feedback>\n        </Form.Group>\n      </Form.Row>\n      <Form.Row>\n        <Form.Group as={Col} md=\"12\" controlId=\"validationAddress\">\n          <Form.Label>Address</Form.Label>\n          <Form.Control type=\"text\" placeholder=\"Address\" required />\n          <Form.Control.Feedback type=\"invalid\">\n            Please provide a valid address.\n          </Form.Control.Feedback>\n        </Form.Group>\n      </Form.Row>\n      <Form.Row>\n        <Form.Group as={Col} md=\"6\" controlId=\"validationCustom03\">\n          <Form.Label>City</Form.Label>\n          <Form.Control type=\"text\" placeholder=\"City\" required />\n          <Form.Control.Feedback type=\"invalid\">\n            Please provide a valid city.\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Form.Group as={Col} md=\"3\" controlId=\"validationCustom04\">\n          <Form.Label>State</Form.Label>\n          <Form.Control type=\"text\" placeholder=\"State\" required />\n          <Form.Control.Feedback type=\"invalid\">\n            Please provide a valid state.\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Form.Group as={Col} md=\"3\" controlId=\"validationCustom05\">\n          <Form.Label>Zip</Form.Label>\n          <Form.Control type=\"text\" placeholder=\"Zip\" required />\n          <Form.Control.Feedback type=\"invalid\">\n            Please provide a valid zip.\n          </Form.Control.Feedback>\n        </Form.Group>\n      </Form.Row>\n      <Button type=\"submit\">Register</Button>\n    </Form>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n","/Applications/MAMP/htdocs/trustana/frontend/src/layout/Loader.tsx",[],"/Applications/MAMP/htdocs/trustana/frontend/src/config.tsx",[],["102","103"],"/Applications/MAMP/htdocs/trustana/frontend/src/pages/Dashboard/index.tsx",["104"],"/Applications/MAMP/htdocs/trustana/frontend/src/components/userData/index.tsx",["105"],"import React, { useContext } from 'react';\nimport { Table } from 'react-bootstrap';\nimport { Store } from '../../Store';\n\nexport default function UserData(): JSX.Element {\n  const { state, dispatch } = useContext(Store);\n  return (\n    <Table striped bordered hover>\n        <thead>\n            <tr>\n            <th colSpan={2}>User's Detail</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr>\n            <td>First Name</td>\n            <td>{state.firstName}</td>\n            \n            </tr>\n            <tr>\n            <td>Last Name</td>\n            <td>{state.lastName}</td>\n            \n            </tr>\n            <tr>\n            <td>Address</td>\n            <td>{state.address}</td>\n            </tr>\n            <tr>\n            <td>Date Of Birth</td>\n            <td>{state.dateOfBirth}</td>\n            </tr>\n            <tr>\n            <td>CV Link</td>\n            <td>{state.filePath}</td>\n            </tr>\n            <tr>\n            <td>Date Created</td>\n            <td>{state.dateCreated}</td>\n            </tr>\n        </tbody>\n    </Table>\n  )\n}\n","/Applications/MAMP/htdocs/trustana/frontend/src/services/index.ts",[],"/Applications/MAMP/htdocs/trustana/frontend/src/pages/Logout/index.tsx",["106"],"import React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Container, Row, Col } from 'react-bootstrap'\n\nimport { Store } from '../../Store'\nexport default function Logout(): JSX.Element {\n    const { state, dispatch } = useContext(Store);\n    const history = useHistory();\n    dispatch({\n            type:'LOGOUT',\n          });\n    history.push('/');\n    return (\n    <Container className=\"mt-3 mb-3\">\n      <Row>\n        <Col md=\"12\">\n            <h2>Logging Out</h2>\n        </Col>\n    </Row>\n    </Container>\n    )\n}","/Applications/MAMP/htdocs/trustana/frontend/src/components/GeneratePublicToken/index.tsx",["107"],"/Applications/MAMP/htdocs/trustana/frontend/src/components/GetUserData/index.tsx",[],{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":12,"column":18,"nodeType":"114","messageId":"115","endLine":12,"endColumn":26},{"ruleId":"112","severity":1,"message":"113","line":6,"column":18,"nodeType":"114","messageId":"115","endLine":6,"endColumn":26},{"ruleId":"112","severity":1,"message":"116","line":1,"column":29,"nodeType":"114","messageId":"115","endLine":1,"endColumn":38},{"ruleId":"112","severity":1,"message":"117","line":9,"column":11,"nodeType":"114","messageId":"115","endLine":9,"endColumn":16},{"ruleId":"112","severity":1,"message":"118","line":4,"column":8,"nodeType":"114","messageId":"115","endLine":4,"endColumn":14},{"ruleId":"112","severity":1,"message":"119","line":24,"column":10,"nodeType":"114","messageId":"115","endLine":24,"endColumn":15},{"ruleId":"112","severity":1,"message":"120","line":24,"column":17,"nodeType":"114","messageId":"115","endLine":24,"endColumn":25},{"ruleId":"112","severity":1,"message":"121","line":25,"column":10,"nodeType":"114","messageId":"115","endLine":25,"endColumn":21},{"ruleId":"112","severity":1,"message":"122","line":25,"column":23,"nodeType":"114","messageId":"115","endLine":25,"endColumn":37},{"ruleId":"112","severity":1,"message":"123","line":26,"column":10,"nodeType":"114","messageId":"115","endLine":26,"endColumn":19},{"ruleId":"112","severity":1,"message":"124","line":27,"column":10,"nodeType":"114","messageId":"115","endLine":27,"endColumn":17},{"ruleId":"112","severity":1,"message":"125","line":27,"column":19,"nodeType":"114","messageId":"115","endLine":27,"endColumn":29},{"ruleId":"112","severity":1,"message":"126","line":28,"column":10,"nodeType":"114","messageId":"115","endLine":28,"endColumn":17},{"ruleId":"112","severity":1,"message":"127","line":28,"column":19,"nodeType":"114","messageId":"115","endLine":28,"endColumn":29},{"ruleId":"112","severity":1,"message":"128","line":29,"column":10,"nodeType":"114","messageId":"115","endLine":29,"endColumn":15},{"ruleId":"112","severity":1,"message":"129","line":29,"column":17,"nodeType":"114","messageId":"115","endLine":29,"endColumn":25},{"ruleId":"112","severity":1,"message":"130","line":30,"column":9,"nodeType":"114","messageId":"115","endLine":30,"endColumn":20},{"ruleId":"108","replacedBy":"131"},{"ruleId":"110","replacedBy":"132"},{"ruleId":"112","severity":1,"message":"113","line":9,"column":19,"nodeType":"114","messageId":"115","endLine":9,"endColumn":27},{"ruleId":"112","severity":1,"message":"113","line":6,"column":18,"nodeType":"114","messageId":"115","endLine":6,"endColumn":26},{"ruleId":"112","severity":1,"message":"117","line":7,"column":13,"nodeType":"114","messageId":"115","endLine":7,"endColumn":18},{"ruleId":"112","severity":1,"message":"113","line":9,"column":18,"nodeType":"114","messageId":"115","endLine":9,"endColumn":26},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],"@typescript-eslint/no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'state' is assigned a value but never used.","'Loader' is defined but never used.","'title' is assigned a value but never used.","'setTitle' is assigned a value but never used.","'description' is assigned a value but never used.","'setDescription' is assigned a value but never used.","'videoFile' is assigned a value but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'message' is assigned a value but never used.","'setMessage' is assigned a value but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","'fileHandler' is assigned a value but never used.",["133"],["134"],"no-global-assign","no-unsafe-negation"]